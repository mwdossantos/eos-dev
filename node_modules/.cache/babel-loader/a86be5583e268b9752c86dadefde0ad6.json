{"ast":null,"code":"import _classCallCheck from \"/Users/matthew/Desktop/eos-dev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthew/Desktop/eos-dev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthew/Desktop/eos-dev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthew/Desktop/eos-dev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthew/Desktop/eos-dev/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matthew/Desktop/eos-dev/src/comps/WithScrollReveal.js\";\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport ScrollReveal from 'scrollreveal';\nexport var WithScrollReveal = function WithScrollReveal(Original) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(_class, _Component);\n\n      function _class(props) {\n        var _this;\n\n        _classCallCheck(this, _class);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n        _this.target = [];\n        return _this;\n      }\n\n      _createClass(_class, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          ScrollReveal().reveal(this.target, this.props.options, this.props.interval);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          ScrollReveal().clean(this.childNodes);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          var children = React.Children.map(this.props.children, function (child) {\n            return React.cloneElement(child, {\n              ref: function ref(c) {\n                return _this2.target.push(findDOMNode(c));\n              }\n            });\n          });\n          return React.createElement(Original, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }), children);\n        }\n      }]);\n\n      return _class;\n    }(Component)\n  );\n};\nexport default WithScrollReveal;","map":{"version":3,"sources":["/Users/matthew/Desktop/eos-dev/src/comps/WithScrollReveal.js"],"names":["React","Component","findDOMNode","ScrollReveal","WithScrollReveal","Original","props","target","reveal","options","interval","clean","childNodes","children","Children","map","child","cloneElement","ref","c","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;;AAEpC,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,cAAKC,MAAL,GAAc,EAAd;AAFiB;AAGlB;;AALmC;AAAA;AAAA,4CAMhB;AAClBJ,UAAAA,YAAY,GAAGK,MAAf,CACE,KAAKD,MADP,EAEE,KAAKD,KAAL,CAAWG,OAFb,EAGE,KAAKH,KAAL,CAAWI,QAHb;AAKD;AAZmC;AAAA;AAAA,+CAab;AACrBP,UAAAA,YAAY,GAAGQ,KAAf,CAAqB,KAAKC,UAA1B;AACD;AAfmC;AAAA;AAAA,iCAgB3B;AAAA;;AACP,cAAMC,QAAQ,GAAGb,KAAK,CAACc,QAAN,CAAeC,GAAf,CAAmB,KAAKT,KAAL,CAAWO,QAA9B,EAAwC,UAAAG,KAAK;AAAA,mBAC5DhB,KAAK,CAACiB,YAAN,CAAmBD,KAAnB,EAA0B;AACxBE,cAAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,uBAAI,MAAI,CAACZ,MAAL,CAAYa,IAAZ,CAAiBlB,WAAW,CAACiB,CAAD,CAA5B,CAAJ;AAAA;AADkB,aAA1B,CAD4D;AAAA,WAA7C,CAAjB;AAKA,iBAAO,oBAAC,QAAD,oBAAc,KAAKb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2BO,QAA3B,CAAP;AACD;AAvBmC;;AAAA;AAAA,MACxBZ,SADwB;AAAA;AAAA,CAAjC;AA0BP,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { findDOMNode } from 'react-dom'\nimport ScrollReveal from 'scrollreveal'\n\nexport const WithScrollReveal = Original =>\n  class extends Component {\n    constructor(props) {\n      super(props)\n      this.target = []\n    }\n    componentDidMount() {\n      ScrollReveal().reveal(\n        this.target,\n        this.props.options,\n        this.props.interval\n      )\n    }\n    componentWillUnmount() {\n      ScrollReveal().clean(this.childNodes)\n    }\n    render() {\n      const children = React.Children.map(this.props.children, child =>\n        React.cloneElement(child, {\n          ref: c => this.target.push(findDOMNode(c))\n        })\n      )\n      return <Original {...this.props}>{children}</Original>\n    }\n  }\n\nexport default WithScrollReveal\n"]},"metadata":{},"sourceType":"module"}